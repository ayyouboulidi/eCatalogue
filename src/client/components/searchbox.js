import React, { Component } from 'react'
import Tooltip from './tooltip'

export default class searchBox extends Component {
  constructor(props){
    super(props)
  }
  componentDidMount(){
    $.widget( "app.autocomplete", $.ui.autocomplete, {

        // The _renderItem() method is responsible for rendering each
        // menu item in the autocomplete menu.
        _renderItem: function( ul, item ) {

            // We want the rendered menu item generated by the default implementation.
            var result = this._super( ul, item );

            // If there is logo data, add our custom CSS class, and the specific
            // logo URL.
            if ( item.logo ) {
                result.prepend( "<a></a>" ).find("a")
                      .addClass( "ui-menu-item-icon" )
                      .css( "background-image", "url('img/" + item.logo + "')" );
            }

            return result;

        }

    });

      var items = new Array();
      $(".search input#searchBar").autocomplete({
                    source: function(request,response){
                        $.post("SearchItems",
                                {req:request.term},
                                function(data){
                                  if (data.code==0){
                                     var array=new Array();
                                     data.result.forEach(function (row) {
                                       var item = new Object();
                                       item.label = row.name;
                                       item.logo = row.url_image;
                                       items[row.name]=row;           
                                       array.push(item);
                                     });
                                    response(array);
                                 }
                        },"json");
                    },
                    minLength: 2,
                    select: function(event, ui) {
                        //
                    },
                    html: true, // optional (jquery.ui.autocomplete.html.js required)
                    // optional (if other layers overlap autocomplete list)
                    open: function(event, ui) {
                    },
                    close:function(event,ui){
                    }
                });
  }
  render(){
        return(
            <div className="search">
              <input id="searchBar" type="search"/>
              <Tooltip page={this.props.page} />
            </div>
        );
    }
}
